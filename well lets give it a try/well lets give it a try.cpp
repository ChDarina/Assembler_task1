// well lets give it a try.cpp: определяет точку входа для консольного приложения.
//

#include "stdafx.h"
#include <iostream>
#include <string>

using namespace std;

int main()
{
	unsigned long int bin;
	//unsigned long int ten;
	unsigned long int five;
	cin >> bin;
	__asm
	{
		mov eax, bin //запись введённого числа
		mov ebx, 10000000 //здесь будет храниться поразрядный делитель
		mov ecx, 0 //здесь будет храниться результат перевода в десятичное
		mov edi, 2 //здесь будут храниться другие делители/множители

		//первый цикл: перевод из двоичного в десятичное
		cycle1: 
		xor edx, edx //обнуление частного
		div ebx //деление на нынешний поразрядный делитель
		mov esi, eax //перемещение реультата деления в один из регистров
		mov eax, ecx //перемещение переведённое на нынешний момент в десятичное число в регистр eax
		push edx //переброс остатка в стэк
		mul edi	//умножение на десятичного числа 2
		pop edx //возврат остатка из стэка
		mov edi, 10 //перемена на делитель 10
		add eax, esi //прибавление к десятичному числу нынешнего разряда
		mov ecx, eax //запись десятичного числа в регистр ecx
		mov eax, ebx //запись поразрядного делителя в регистр eax
		push edx //переброс остатка в стэк
		xor edx, edx //защита от переполнения
		div edi //уменьшение поразрядного делителя на разряд
		pop edx //возврат остатка из стэка
		mov edi, 2 //перемена на множитель 2
		mov ebx, eax //запись поразрядного делителя в регистр ebx
		mov eax, edx //запись остатка числа в регистр eax
		and ebx, ebx //проверка на то, равен ли поразрядный делитель нулю: 
		jnz cycle1   //если нет, то цикл возобновляется, если да, то цикл прекращается

		//mov ten, ecx //запись получившегося числа в соответствующую переменную (для проверки)
		mov eax, ecx //запись десятичного числа в регистр eax
		mov ebx, 5 //изменения делителя на 5
		mov esi, 1 //первый множитель для создания числа в пятеричной системе
		mov edi, 10 //для умножения множителя на 10
		xor ecx, ecx //регистр с записью числа в пятеричной системе

		//второй цикл: перевод из десятичного в пятеричное
		cycle2:
		xor edx, edx //обнуление остатка для предотвращения переполнения
		div ebx //делим на 5
		push eax //запись частного в стэк
		mov eax, edx //запись остатка в регистр eax
		mul esi //умножение остатка на соответствующий множитель
		push eax //запись получившегося числа в стэк
		mov eax, esi //запись множителя в регистр eax
		mul edi //увеличение множителя в 10 раз
		mov esi, eax //перезапись нового множителя
		pop edx //"доставание" пятеричного числа из стэка
		pop eax //"доставание" числа для дальнейшего деления из стэка
		add ecx, edx //прибавление пятеричного числа, полученного в ходе итерации, к сумме чисел с других итераций
		and eax, eax //проверка на то, равно ли делимое число нулю
		jnz cycle2   //если нет, то цикл возобновляется, если да, то цикл прекращается

		mov five, ecx //запись получившегося числа в соответствующую переменную
	}
	//cout << ten << endl;
	cout << five << endl;
	system("pause");
    return 0;
}

